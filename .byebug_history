continue
@parallel_friendrequest_exists
continue
@parallel_friendrequest_exists
continue
@friendship_exists
continue
friendship_exist
continue
friendrequest_params
continue
friendrequests_params
friendrequest_params
continue
friendrequest
friendrequest_params
continue
friendrequest_params
friendrefrifriendrequest_params
continue
friendrequest_params
continue
message_params
continue
Message.where("recipient_id = 2 AND sender_id= 1 AND recipient_type= User")
Message.where("recipient_id = 2 AND sender_id= 1 AND recipient_type= 'User'")
Message.where(recipient_id = 2 AND sender_id= 1 AND recipient_type= 'User')
Message.where(recipient_id: 2, sender_id: 1, recipient_type: 'User')
Message.where(recipient_id: 2, sender_id: 1, recipient_type: User)
Message.where(recipient_id: 2, sender_id: 1)
Message.where(recipient_id: 1, sender_id: 2)
Message.where(recipient_id: 1)
@x
@x= Message.where(recipient_id:2, send_id: 1, recipient_type:'User')
x.all
x.first
x
x= Message.where(recipient_id:2, send_id: 1, recipient_type:'User')
Message.where(recipient_id:2, send_id: 1, recipient_type:'User')
Message.where(recipient_id:2, send_id: 1, recipient_type:'User').first
Message.where(recipient_id:2, send_id: 1, recipient_type:'User')
Message.where(recipient_type:2, send_id: 1, recipient_type:'User')
continue
Message.where(
        "((recipient_id = #{current_user.id} AND sender_id = #{params['sender_id']})
         OR
        (recipient_id = #{params['sender_id']}  AND sender_id = #{current_user.id}))
        AND recipient_type = #{params['recipient_type']}
        "
      ).second
Message.where(
        `((recipient_id = #{current_user.id} AND sender_id = #{params['sender_id']})
         OR
        (recipient_id = #{params['sender_id']}  AND sender_id = #{current_user.id}))
        AND recipient_type = #{params['recipient_type']}
        `
      ).second
Message.where(
        `((recipient_id = #{current_user.id} AND sender_id = #{params['sender_id']})
         OR
        (recipient_id = #{params['sender_id']}  AND sender_id = #{current_user.id}))
        AND recipient_type = #{params['recipient_type']}
        `
      )
params['sender_id']
current_user.id
continue
params[sender_id]
continue
current_user.messages.where(sender_id:1)
current_user.messages
current_user
message_params
continue
request.headers['Authorization']
continue
request.headers['Authorization']
continue
request.headers['Authorization']
request.headers
continue
request.headers['Authorization']
continue
JSON.parse(@channel.to_json)
@channel.to_json
@channel
continue
message_params
continue
params
continue
params
message_params
continue
message_params
messages_params
message_params
continue
@channel
continue
continue\
continue]
continue]\
ccontinue
channel_params
continue
channel.nil?
channel
continue
channel.users.ids.include? current_user.id
channel.users
channel.users.include? current_user.id
continue
channel.users
channel
current_user.channels
current_user.channel
current_user
current_user.channels
channel
channel.users
channel
current_user
continue
quit
continue
current_user.channels.ids
current_user.channels.id
current_user.channels
current_user
continue
Message.where(:sender_id === params['sender_id'])
Message.where(:recipient_id === params['recipient_id'])
Message.where(:recipient_id === params['recipient_id'] 
params['recipient_id']
@messages
continue
request.headers['Authorization']
request.headers
continue
channel_user_params
continue
channel_user_params
continue
channel_user_params
continue
channel_user_params
continue
current_user.jti
jwt_payload
continue
continue\
jwt_payload['jti'] === current_user.jti
jwt_payload.jti === current_user.jti
jwt_payload
jwt_payload === current_user.jti
current_user.jti
jwt_payload
continue
current_user.jti
jwt_payload
request.headers['Authorization']
current_user
continue
jwt_payload
current_user
current_user'
continue
message_params
continue
quit
message_params
@message
message_params
q
@message
